#
###端口
##server.port: 8082
##
##spring.application.name: service-provider
#
##spring.datasource.url: jdbc:mysql://47.75.88.208:3306/test
##spring.datasource.username: liudabao
##spring.datasource.password: 1qazXSW
##spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
#
#
##nacos.service-address: 47.75.88.208
##nacos.port: 8848
#
## 配置dubbo服务信息
dubbo.application.id: provider
dubbo.application.name: provider
#
## 禁用QOS同一台机器可能会有端口冲突现象
dubbo.application.qos-enable: false
dubbo.application.qos-accept-foreign-ip: false
# 配置注册中心
dubbo.registry.address: nacos://47.75.88.208:8848
# 设置协议-协议由提供方指定消费方被动接受
dubbo.protocol.name: dubbo
dubbo.protocol.port: 20880
dubbo.scan.base-packages: com.example.stock.service.impl
dubbo.consumer.check: false
spring.main.allow-bean-definition-overriding: true


#同一服务器项目需要端用端口区分
#spring.cloud.sentinel.transport.port:8720
#sentinel控制台地址
spring.cloud.sentinel.transport.dashboard: localhost:8090
spring.cloud.sentinel.eager: true
#
#
##sentinel.application.dashboard: 47.75.88.208:8081
##
###sentinel
##spring.cloud.sentinel.eager: true
##spring.cloud.sentinel.transport.port: 8081
##spring.cloud.sentinel.transport.dashboard: 47.75.88.208
##spring.cloud.sentinel.transport.heartbeat-interval-ms: 500
##mybatis
spring.datasource.url: jdbc:mysql://10.6.136.56:21500/test
spring.datasource.username: root
spring.datasource.password: 123456
spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
#
spring.redis.host: localhost
spring.redis.port: 6379
# Redis 数据库索引（默认为 0）
spring.redis.database: 0
# Redis 服务器连接端口
# Redis 服务器连接密码（默认为空）
spring.redis.password:
#连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active: 8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait: -1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle: 8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle: 0
# 连接超时时间（毫秒）
spring.redis.timeout: 100
#
#
##nameServer
#rocketmq.name-server: 127.0.0.1:9876
#rocketmq.producer.group=: tock_producer_group
#dubbo:
#  provider:
#    group: dubbo-provider
#dubbo:
#  provider:
#    group: provider
